import math

from . import production
    
class CapProduction(production.Production):
    
    Cap_DB = {
        30 : {
            52 : 0.7,
            62 : 0.72,
            72 : 0.74,
            80 : 0.76,
            90 : 0.77,
            100 : 0.78,
            110 : 0.81,
            120 : 0.85,
            130 : 0.94,
            140 : 1,
            150 : 1.15,
            160 : 1.3,
            170 : 1.5,
            180 : 1.7,
        },
        35 : {
            52 : 0.76,
            62 : 0.77,
            72 : 0.79,
            80 : 0.81,
            90 : 0.83,
            100 : 0.85,
            110 : 1,
            120 : 1.13,
            130 : 1.26,
            140 : 1.39,
            150 : 1.52,
            160 : 1.6,
            170 : 1.75,
            180 : 1.85,
        },
        40 : {
            52 : 0.82,
            62 : 0.82,
            72 : 0.86,
            80 : 0.87,
            90 : 0.89,
            100 : 0.92,
            110 : 1.12,
            120 : 1.24,
            130 : 1.37,
            140 : 1.44,
            150 : 1.68,
            160 : 1.8,
            170 : 1.85,
            180 : 1.95,
        },
        50 : {
            52 : 0.86,
            62 : 0.87,
            72 : 0.91,
            80 : 0.93,
            90 : 0.96,
            100 : 0.99,
            110 : 1.24,
            120 : 1.35,
            130 : 1.48,
            140 : 1.59,
            150 : 1.77,
            160 : 1.88,
            170 : 1.94,
            180 : 2.1,
            190 : 2.65,
            215 : 2.7,
            240 : 2.73,
            260 : 2.8,
            280 : 2.85,
            300 : 2.9,
            320 : 2.95,
            340 : 3,
            360 : 3.05,
            380 : 3.1,
            400 : 3.15,
            420 : 3.25,
        },
        55 : {
            52 : 0.9,
            62 : 0.93,
            72 : 0.96,
            80 : 0.99,
            90 : 1.02,
            100 : 1.08,
            110 : 1.36,
            120 : 1.46,
            130 : 1.59,
            140 : 1.69,
            150 : 1.85,
            160 : 1.96,
            170 : 2.03,
            180 : 2.22,
            190 : 2.82,
            215 : 2.86,
            240 : 2.91,
            260 : 2.96,
            280 : 3.01,
            300 : 3.07,
            320 : 3.13,
            340 : 3.16,
            360 : 3.2,
            380 : 3.25,
            400 : 3.3,
            420 : 3.5,
        },
        60 : {
            190 : 2.98,
            215 : 3.02,
            240 : 3.07,
            260 : 3.12,
            280 : 3.15,
            300 : 3.2,
            320 : 3.5,
            340 : 3.7,
            360 : 3.8,
            380 : 4,
        },
        70 : {
            110 : 1.48,
            120 : 1.57,
            130 : 1.7,
            140 : 1.79,
            150 : 1.92,
            160 : 2.04,
            170 : 2.12,
            180 : 2.34,
            190 : 3.15,
            215 : 3.18,
            240 : 3.23,
            260 : 3.28,
            280 : 3.54,
            300 : 3.8,
            320 : 4.06,
            340 : 4.32,
            360 : 4.58,
            380 : 4.82,
            400 : 5.08,
            420 : 5.38,
            460 : 6.1,
            500 : 6.4,
            540 : 6.7,
            580 : 6.9,
            620 : 7.1,
        },
        80 : {
            110 : 1.6,
            120 : 1.68,
            130 : 1.81,
            140 : 1.89,
            150 : 2.01,
            160 : 2.12,
            170 : 2.21,
            180 : 2.46,
            190 : 3.31,
            215 : 3.34,
            240 : 3.39,
            260 : 3.44,
            280 : 3.71,
            300 : 3.99,
            320 : 4.26,
            340 : 4.53,
            360 : 4.81,
            380 : 5.08,
            400 : 5.36,
            420 : 5.63,
            460 : 6.25,
            500 : 6.55,
            540 : 6.85,
            580 : 7.15,
            620 : 7.45,
        },
        90 : {
            110 : 1.7,
            120 : 1.8,
            130 : 1.9,
            140 : 2,
            150 : 2.1,
            160 : 2.13,
            170 : 2.3,
            180 : 2.58,
            240 : 3.45,
            260 : 3.5,
            280 : 3.8,
            300 : 4.1,
            320 : 4.4,
            340 : 4.7,
            360 : 5,
            380 : 5.3,
            400 : 5.6,
            420 : 5.88,
            460 : 6.4,
            500 : 6.7,
            540 : 7,
            580 : 7.3,
            620 : 7.7,
        },
        100 : {
            160 : 2.3,
            170 : 2.45,
            180 : 2.7,
            240 : 3.55,
            260 : 3.61,
            280 : 3.91,
            300 : 4.23,
            320 : 4.54,
            340 : 4.85,
            360 : 5.16,
            380 : 5.47,
            400 : 5.74,
            420 : 6.06,
            460 : 6.55,
            500 : 6.85,
            540 : 7.15,
            580 : 7.45,
            620 : 7.85,
        },
        110 : {
            180 : 2.82,
            260 : 3.75,
            280 : 4.08,
            300 : 4.41,
            320 : 4.74,
            340 : 5.07,
            360 : 5.4,
            380 : 5.73,
            400 : 6.06,
            420 : 6.8,
            460 : 6.7,
            500 : 7,
            540 : 7.3,
            580 : 7.7,
            620 : 8,
        },
        120 : {
            460 : 6.85,
            500 : 7.15,
            540 : 7.45,
            580 : 7.75,
            620 : 8.05,
        },
    }
    
    def __init__(self, D_in, H, lotus=0):
        self.name = 'Крышка'
        self.D_in = D_in
        self.H = H

        self.noise_koef = 1
        
        self.elements = []
        self.elements_hours = []
        
        if lotus == 1:
            self.noise_koef = 1.02            
            
        
    def calc_hours(self):
        
        self.hours = {}
        
        # 1. Подготовка места 
        self.hours[1] = ['mechanical_fastener_processing', self.Cap_DB[self.D_in][self.H]]
        
        # ИТОГ
        self.total_hours = sum([i[1] for i in self.hours.values()])
        
    
    def find_nearest_KZ(self):
        for i in self.KZ_DB.keys():
            i_prev = i
            if i > self.D_in:
                return self.KZ_DB[i_prev]
        return False
                